         ******************************************************
			  Llia Quick Start Guide
          ******************************************************        

1) Start the host application.
   a) Start SuperCollider ide, from a terminal 'scide'
   b) Load and execute the file Llia/sc/SynthDefs/llia.scd
      This step starts the SuperCollider server and also
      an instance of LliaHandler.

2) Start client application.
   a) In a terminal navigate to the top Llia folder.
   b) Enter: python llia/main.py
   c) You should first see a splash screen where you may select various IO
      parameters.  The default OSC ID, host and client addresses and ports
      should agree between the client and host applications. If they do not
      match communication between host and client will be broken.

      A list of available MIDI ports appears in the lower section.  Select
      the desired port and click "Continue"   Once selected these values
      can not be altered throughout an application run.

      (FIXME: MIDI output ports are included for possible future extensions
      and are not currently used.)

   d) The splash "continue" button takes you to the main application
      window.  

   e) To test OSC communication click the "Ping" option under the OSC
      menu.  If all is well two things should happen.  First there should
      be an indication in the SuperCollider post window that a ping signal
      has been received; something like '/Llia/llia/ping'.  Next the host
      should transmit a 'ping-response' back to the client.  If so the
      words "Ping OK" will appear in the status line located at the bottom
      of the Llia window.

   f) Test MIDI reception.  Click "Toggle MIDI input Trace" under the MIDI
      menu.  If all is well MIDI input data should appear in the terminal
      window used to launch Llia.

   g) Play a synth.
      Click one of the "Synth" buttons and a small dialog window should
      appear.  For now accept the defaults and click "OK".  The dialog
      window will be replaced by a larger "synth" window and the instrument
      should be live.  (FIXME: BUG 0006 Synths may not be  active until a
      program is selected.  Simply click one of the available programs in
      the list on the left.)

         ******************************************************
				  Effects
	 ******************************************************	

Using effects is slightly more complicated.  First you must create an audio
bus to patch the synth output to the effect input.  Next you create a
synth with output sent to the bus.  Finally you create the effect, setting
it's input bus to match the synth output.  

   1) Create audio bus(es)
   2) Create synth
   3) Create effect

1) To create an audio bus click "Audio" under the Bus menu.  This
   displays a small dialog with the currently defined buses in alphabetical
   order.   Note several buses are automatically created with names "in_n"
   and "out_n" where n is a small integer.  These buses correspond to the
   first n hardware input and output channels.  out_0 is the default output
   bus and corresponds to the first output of the first sound card.

   Create a bus by entering it's name and clicking the add [+] button.
   There are restrictions on valid bus names and in invalid name will
   produce a warning message.

2) Select a synth as above but this time set it's output bus to match the
   bus just created above.   A new synth window should appear.  The synth
   is active but can not yet be heard.

3) Select an effect.  In the dialog set the input bus to match the output
   bus of the synth.

         ******************************************************
			  Using Multiple Effects
         ******************************************************			  

There is very little difference between a "synth" and an "effect" which
allows a chain of effects to be patched together.  The order in which 
the effects are created is important. In general effects must be created
in *reverse* order to how they are patched.

   Assume synth Foo sent through effect Bar and then effect Baz

    [Foo] --> [Bar] --> [Baz] --> 

    buses  A         B        out_0


   1) Create audio buses A and B, bus out_0 is default sound card output.
   2) Create synth Foo   with output -> A.
   3) Create the last effect first:  Baz  with input <- B, output -> out_0
   4) Create the next to last effect, in this case Bar with input <- A, output -> B



         ******************************************************
				 Caveats:
         ******************************************************				 

A) FIXME: Remember BUG 0006 above, neither the synth not the effect will
   produce output until a program has been selected for each.

B) At this point it is not not possible to alter the connections between
   synths and effects, or for that matter to remove an active
   synth. Hopefully these features will be added later.

There are many options available by editing the configuration file.

One very useful configuration value is the MIDI ports.  By setting the
ports in the config file you may skip the intial splash screen.

Use the -p command line optin to display a listof avaliable ports.

    python llia/main.py -p



Copy the desired port name exactly to the input-port line

    [MIDI]
    input-port : my port name

Disable the splash screen

   [GUI]
   no-splash : True


        Linux has the annoying habit of renaming MIDI hardware on
        reboot. If the system has been rebooted you may need to change the
        MIDI port names in the config file.


You may run Llia in a 'headless' mode without GUI support by

   [GENERAL]
   no-repl : False

   [GUI]
   gui : None


This provides an interactive command line prompt.  

